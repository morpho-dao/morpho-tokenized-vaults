name: Foundry tests
description: Runs full forge test suite given a protocol and a network

inputs:
  protocol:
    description: The protocol against which to run the forge test suite.
    required: true
  network:
    description: The network against which to run the forge test suite.
    required: true
  alchemyKey:
    description: The Alchemy key giving access to a private RPC.
    required: true
  codecovToken:
    description: The Codecov token used to upload coverage report.
    required: false

runs:
  using: composite
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: yarn

    - name: Install dependencies
      run: yarn install --frozen-lockfile
      shell: bash

    - name: Install Foundry
      uses: onbjerg/foundry-toolchain@v1
      with:
        version: nightly

    - name: Foundry fork cache
      uses: actions/cache@v3
      with:
        path: "~/.foundry/cache"
        key: foundry-${{ hashFiles('Makefile', 'foundry.toml') }} # where fork block numbers & RPC are stored

    - name: Foundry compilation cache
      uses: actions/cache@v3
      with:
        path: |
          cache
          out
        key: ${{ github.base_ref || github.ref_name }}-foundry-${{ inputs.protocol }}-${{ inputs.network }} # always keep compiled contracts from base branch

    - name: Run tests & create gas report
      run: make gas-report > ${{ inputs.protocol }}.${{ inputs.network }}.gasreport.ansi
      shell: bash
      env:
        PROTOCOL: ${{ inputs.protocol }}
        NETWORK: ${{ inputs.network }}
        ALCHEMY_KEY: ${{ inputs.alchemyKey }}
        FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}

    - name: Compare gas reports
      uses: Rubilmax/foundry-gas-diff@v3.9
      with:
        report: ${{ inputs.protocol }}.${{ inputs.network }}.gasreport.ansi
        ignore: test/**/*,lib/**/*
        header: |
          # Morpho-${{ inputs.protocol }} gas impacts (${{ inputs.network }})
      id: gas_diff

    - name: Add gas diff to sticky comment
      if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: ${{ inputs.protocol }} (${{ inputs.network }})
        message: ${{ steps.gas_diff.outputs.markdown }}
        delete: ${{ !steps.gas_diff.outputs.markdown }} # delete the comment in case changes no longer impact gas costs

    - name: Generate lcov coverage report
      if: ${{ inputs.codecovToken != '' }}
      run: make coverage
      shell: bash
      env:
        PROTOCOL: ${{ inputs.protocol }}
        NETWORK: ${{ inputs.network }}
        ALCHEMY_KEY: ${{ inputs.alchemyKey }}
        FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}

    - name: Upload coverage to Codecov
      if: ${{ inputs.codecovToken != '' }}
      uses: codecov/codecov-action@v3
      with:
        token: ${{ inputs.codecovToken }}
        name: morpho-${{ inputs.protocol }}-${{ inputs.network }}
        files: lcov.info
